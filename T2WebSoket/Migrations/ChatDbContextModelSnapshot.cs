// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using T2WebSoket.Repositories;

#nullable disable

namespace T2WebSoket.Migrations
{
    [DbContext(typeof(ChatDbContext))]
    partial class ChatDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.2");

            modelBuilder.Entity("T2WebSoket.Models.Chat", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("Id")
                        .HasColumnOrder(0);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("TEXT")
                        .HasColumnName("CreationDate")
                        .HasColumnOrder(1);

                    b.Property<bool>("IsDelete")
                        .HasColumnType("INTEGER")
                        .HasColumnName("IsDelete")
                        .HasColumnOrder(3);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("TypeId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("TEXT")
                        .HasColumnName("UpdateDate")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("TypeId");

                    b.ToTable("Chats");
                });

            modelBuilder.Entity("T2WebSoket.Models.ChatFile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("Id")
                        .HasColumnOrder(0);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("TEXT")
                        .HasColumnName("CreationDate")
                        .HasColumnOrder(1);

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("INTEGER")
                        .HasColumnName("IsDelete")
                        .HasColumnOrder(3);

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("TEXT")
                        .HasColumnName("UpdateDate")
                        .HasColumnOrder(2);

                    b.Property<Guid>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Files");
                });

            modelBuilder.Entity("T2WebSoket.Models.ChatType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("Id")
                        .HasColumnOrder(0);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("TEXT")
                        .HasColumnName("CreationDate")
                        .HasColumnOrder(1);

                    b.Property<bool>("IsDelete")
                        .HasColumnType("INTEGER")
                        .HasColumnName("IsDelete")
                        .HasColumnOrder(3);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("TEXT")
                        .HasColumnName("UpdateDate")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.ToTable("ChatTypes");
                });

            modelBuilder.Entity("T2WebSoket.Models.Message", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("Id")
                        .HasColumnOrder(0);

                    b.Property<Guid>("ChatId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("TEXT")
                        .HasColumnName("CreationDate")
                        .HasColumnOrder(1);

                    b.Property<bool>("IsDelete")
                        .HasColumnType("INTEGER")
                        .HasColumnName("IsDelete")
                        .HasColumnOrder(3);

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("TEXT")
                        .HasColumnName("UpdateDate")
                        .HasColumnOrder(2);

                    b.Property<Guid>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ChatId");

                    b.HasIndex("UserId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("T2WebSoket.Models.MessageFile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("Id")
                        .HasColumnOrder(0);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("TEXT")
                        .HasColumnName("CreationDate")
                        .HasColumnOrder(1);

                    b.Property<Guid>("IdFile")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("IdMessage")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("INTEGER")
                        .HasColumnName("IsDelete")
                        .HasColumnOrder(3);

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("TEXT")
                        .HasColumnName("UpdateDate")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("IdFile");

                    b.HasIndex("IdMessage");

                    b.ToTable("MessageFiles");
                });

            modelBuilder.Entity("T2WebSoket.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("Id")
                        .HasColumnOrder(0);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("TEXT")
                        .HasColumnName("CreationDate")
                        .HasColumnOrder(1);

                    b.Property<bool>("IsDelete")
                        .HasColumnType("INTEGER")
                        .HasColumnName("IsDelete")
                        .HasColumnOrder(3);

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("TEXT")
                        .HasColumnName("UpdateDate")
                        .HasColumnOrder(2);

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("T2WebSoket.Models.UsersChats", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("Id")
                        .HasColumnOrder(0);

                    b.Property<Guid>("ChatId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("TEXT")
                        .HasColumnName("CreationDate")
                        .HasColumnOrder(1);

                    b.Property<bool>("IsDelete")
                        .HasColumnType("INTEGER")
                        .HasColumnName("IsDelete")
                        .HasColumnOrder(3);

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("TEXT")
                        .HasColumnName("UpdateDate")
                        .HasColumnOrder(2);

                    b.Property<Guid>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ChatId");

                    b.HasIndex("UserId");

                    b.ToTable("UsersChats");
                });

            modelBuilder.Entity("T2WebSoket.Models.Chat", b =>
                {
                    b.HasOne("T2WebSoket.Models.ChatType", "ChatType")
                        .WithMany("Chats")
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ChatType");
                });

            modelBuilder.Entity("T2WebSoket.Models.ChatFile", b =>
                {
                    b.HasOne("T2WebSoket.Models.User", "User")
                        .WithMany("ChatFiles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("T2WebSoket.Models.Message", b =>
                {
                    b.HasOne("T2WebSoket.Models.Chat", "Chat")
                        .WithMany("Messages")
                        .HasForeignKey("ChatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("T2WebSoket.Models.User", "User")
                        .WithMany("Messages")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Chat");

                    b.Navigation("User");
                });

            modelBuilder.Entity("T2WebSoket.Models.MessageFile", b =>
                {
                    b.HasOne("T2WebSoket.Models.ChatFile", "File")
                        .WithMany("MessageFiles")
                        .HasForeignKey("IdFile")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("T2WebSoket.Models.Message", "Message")
                        .WithMany("MessageFiles")
                        .HasForeignKey("IdMessage")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("File");

                    b.Navigation("Message");
                });

            modelBuilder.Entity("T2WebSoket.Models.UsersChats", b =>
                {
                    b.HasOne("T2WebSoket.Models.Chat", "Chat")
                        .WithMany("UsersChats")
                        .HasForeignKey("ChatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("T2WebSoket.Models.User", "User")
                        .WithMany("UserChats")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Chat");

                    b.Navigation("User");
                });

            modelBuilder.Entity("T2WebSoket.Models.Chat", b =>
                {
                    b.Navigation("Messages");

                    b.Navigation("UsersChats");
                });

            modelBuilder.Entity("T2WebSoket.Models.ChatFile", b =>
                {
                    b.Navigation("MessageFiles");
                });

            modelBuilder.Entity("T2WebSoket.Models.ChatType", b =>
                {
                    b.Navigation("Chats");
                });

            modelBuilder.Entity("T2WebSoket.Models.Message", b =>
                {
                    b.Navigation("MessageFiles");
                });

            modelBuilder.Entity("T2WebSoket.Models.User", b =>
                {
                    b.Navigation("ChatFiles");

                    b.Navigation("Messages");

                    b.Navigation("UserChats");
                });
#pragma warning restore 612, 618
        }
    }
}
